app MyPlants {
  wasp: {
    version: "^0.11.1"
  },
  title: "MyPlants",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int     @id @default(autoincrement())
    username String  @unique
    password String
    plants   Plant[]
psl=}

entity Plant {=psl
    id                Int      @id @default(autoincrement())
    name              String
    wateringFrequency Int
    lastWatered       DateTime @default(now())
    user              User     @relation(fields: [userId], references: [id])
    userId            Int
psl=}

action createPlant {
  fn: import { createPlant } from "@server/actions.js",
  entities: [Plant]
}

action waterPlant {
  fn: import { waterPlant } from "@server/actions.js",
  entities: [Plant]
}

query getPlants {
  fn: import { getPlants } from "@server/queries.js",
  entities: [Plant]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/HomePage.jsx",
  authRequired: true
}

route AddPlantRoute { path: "/add-plant", to: AddPlantPage }
page AddPlantPage {
  component: import { AddPlantPage } from "@client/pages/AddPlantPage.jsx",
  authRequired: true
}